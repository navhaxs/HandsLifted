<Window xmlns="https://github.com/avaloniaui"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:views="using:HandsLiftedApp.Views"
		xmlns:vm="using:HandsLiftedApp.ViewModels"
		xmlns:utils="using:HandsLiftedApp.Utils"
		xmlns:ext="using:HandsLiftedApp.Extensions"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:viewsrender="using:HandsLiftedApp.Views.Render"
		xmlns:controls="using:HandsLiftedApp.Controls"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:material="using:Material.Icons.Avalonia"
		xmlns:controlmodules="using:HandsLiftedApp.Views.ControlModules"
		mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="550"
		x:Class="HandsLiftedApp.Views.MainWindow"
		Icon="/Assets/app.ico"
		WindowStartupLocation="CenterScreen"
		Width="1280" Height="720"
		DoubleTapped="MainWindow_DoubleTapped"
		Title="VisionScreens | Sunday 11am | 22 May 2022">

	<Design.DataContext>
		<vm:MainWindowViewModel/>
	</Design.DataContext>

	<DockPanel>
		<Menu IsVisible="False" DockPanel.Dock="Top" FontSize="11" FontFamily="Segoe UI" Height="20" Background="#bbbbbf">
			<MenuItem Header="_File">
				<MenuItem Header="_New Service" />
				<MenuItem Header="_Open Service" />
				<MenuItem Header="Open _Demo Service" />
				<MenuItem Header="_Save Service" />
				<MenuItem Header="_Save Service As..." />
				<Separator />
				<MenuItem Header="_VisionScreen Preferences" />
				<MenuItem Header="_Exit" />
			</MenuItem>
			<MenuItem Header="_Content">
				<MenuItem Header="Current item:" IsEnabled="False" />
				<MenuItem Header="Edit Song..." />
				<MenuItem Header="_Edit Layout and Template..." />
				<Separator />
				<MenuItem Header="Add new item to service" />
			</MenuItem>
			<MenuItem Header="_View">
				<MenuItem Header="Show Left Service Timeline Panel">
					<MenuItem.Icon>
						<CheckBox BorderThickness="0"
								  IsHitTestVisible="False"
							>
							Toggle _Me
						</CheckBox>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Show Right Output Panel">
					<MenuItem.Icon>
						<CheckBox BorderThickness="0"
								  IsHitTestVisible="False"
								>
							Toggle _Me
						</CheckBox>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
			<MenuItem Header="_Output">
				<MenuItem
					Header="Turn on _Projector output">
					<MenuItem.Icon>
						<CheckBox BorderThickness="0"
								  IsHitTestVisible="False"
								 >
							Toggle _Me
						</CheckBox>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
					Header="Turn on _Stage Display output"
					>
					<MenuItem.Icon>
						<CheckBox BorderThickness="0"
								  IsHitTestVisible="False"
								>
							Toggle _Me
						</CheckBox>
					</MenuItem.Icon>
				</MenuItem>

				<Separator />
				<MenuItem
					Header="_Blank display"
					>
					<MenuItem.Icon>
						<CheckBox BorderThickness="0"
								  IsHitTestVisible="False"
								 >
							Toggle _Me
						</CheckBox>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem
				Header="_Freeze display"
					>
					<MenuItem.Icon>
						<CheckBox BorderThickness="0"
								  IsHitTestVisible="False"
									>
							Toggle _Me
						</CheckBox>
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem Header="_Configure Screens..." />
			</MenuItem>
			<MenuItem Header="_Library">
				<MenuItem Header="Manage Song database..." />
			</MenuItem>
			<MenuItem Header="_Help">
				<MenuItem Header="_Quick how-to" />
				<MenuItem Header="_Help manual" />
				<MenuItem Header="_Debug" />
				<MenuItem Header="_About" Command="{Binding OnAboutWindow}" CommandParameter="{Binding $parent[Window]}" />
			</MenuItem>
		</Menu>
		<Grid ColumnDefinitions="*, 1, 0.24*">

			<DockPanel Grid.Column="0">

				<Border Padding="14 20" Background="#eeeef2" DockPanel.Dock="Top">
					<StackPanel VerticalAlignment="Center" Orientation="Horizontal">
						<TextBlock FontSize="20" Margin="0 0 10 0">Sunday 11am</TextBlock>
						<TextBlock VerticalAlignment="Bottom" Foreground="#8a8c8c" FontSize="20">22 May 2022</TextBlock>
					</StackPanel>
				</Border>


				<Grid>

					<Grid.ColumnDefinitions>
						<ColumnDefinition Width = "0.2 *" />
						<ColumnDefinition Width = "0" />
						<ColumnDefinition Width = "*" />
					</Grid.ColumnDefinitions>

					<!-- Left panel -->
					<DockPanel Grid.Column="0" Background="#eeeef2">
						<DockPanel.Styles>
							<Style Selector="Button.MenuItem">
								<Setter Property="BorderThickness" Value="0 1 0 0" />
								<Setter Property="CornerRadius" Value="0" />
								<Setter Property="Padding" Value="12 8 6 8" />
								<Setter Property="BorderBrush" Value="#8e8e8e"/>
								<Setter Property="Background" Value="#dddddd"/>
								<Setter Property="HorizontalContentAlignment" Value="Left" />
							</Style>
							<Style Selector="Button DockPanel material|MaterialIcon">
								<Setter Property="Height" Value="18" />
								<Setter Property="Width" Value="18" />
								<Setter Property="Foreground" Value="#383838" />
							</Style>
							<Style Selector="Button DockPanel TextBlock">
								<Setter Property="Margin" Value="8 0 0 0"/>
								<Setter Property="FontSize" Value="14"/>
								<Setter Property="VerticalAlignment" Value="Center"/>
							</Style>
							<Style Selector="Button:pointerover /template/ ContentPresenter">
								<Setter Property="BorderBrush" Value="#3c7fb1"/>
								<Setter Property="Background" Value="#bee6fd"/>
							</Style>
							<Style Selector="Button:pressed /template/ ContentPresenter">
								<Setter Property="BorderBrush" Value="#2c628b"/>
								<Setter Property="Background" Value="#c4e5f6"/>
							</Style>
							<Style Selector="Button:pressed, RepeatButton:pressed, ToggleButton:pressed">
								<Setter Property="RenderTransform" Value="none" />
							</Style>
						</DockPanel.Styles>
						<Button Classes="MenuItem" HorizontalAlignment="Stretch" DockPanel.Dock="Bottom">
							<DockPanel>
								<material:MaterialIcon DockPanel.Dock="Left" Kind="Menu" />
								<TextBlock Text="Library" />
							</DockPanel>
						</Button>
						<Button Classes="MenuItem" HorizontalAlignment="Stretch" DockPanel.Dock="Bottom">
							<Button.Flyout>
								<Flyout>
									<Grid MinWidth="400" MinHeight="100">
										<views:AddItemPaletteControl />
									</Grid>
								</Flyout>
							</Button.Flyout>
							<DockPanel>
								<material:MaterialIcon DockPanel.Dock="Left" Kind="PlusCircleOutline" />
								<TextBlock Text="Add Item" />
							</DockPanel>
						</Button>
						<Button Classes="MenuItem" HorizontalAlignment="Stretch" DockPanel.Dock="Bottom">
							<Button.Flyout>
								<Flyout>
									<StackPanel MinWidth="200">
										<StackPanel.Styles>
											<Style Selector="Button">
												<Setter Property="HorizontalAlignment" Value="Stretch" />
												<Setter Property="HorizontalContentAlignment" Value="Left" />
											</Style>
										</StackPanel.Styles>
										<Button Content="Load" Command="{Binding LoadServiceCommand}" />
										<Button Content="New" Command="{Binding NewServiceCommand}" />
										<Button Content="Save" Command="{Binding SaveServiceCommand}" />
										<Separator />
										<Label Content="Debug" />
										<Button Content="About" Command="{Binding OnAboutWindowCommand}" />
										<Button Content="Object Inspector" Command="{Binding OnDebugClickCommand}"/>
									</StackPanel>
								</Flyout>
							</Button.Flyout>
							<DockPanel>
								<material:MaterialIcon DockPanel.Dock="Left" Kind="Alert" />
								<TextBlock Text="Debug" />
							</DockPanel>
						</Button>

						<controls:ItemOrderListView />

					</DockPanel>

					<GridSplitter Grid.Column="1"
								  Margin="-3,0"
								  BorderThickness="3,0"
								  BorderBrush="Transparent"
								  HorizontalAlignment="Stretch"
								  ZIndex="9999"
							  />

					<!-- Centre panel-->
					<Border Grid.Column="2" CornerRadius="2 0 0 0" HorizontalAlignment="Stretch" BorderBrush="#9a93cd" BorderThickness="1 1 0 0"
							ZIndex="2"
						>

						<DockPanel>
							<Border
						Height="50"
						Padding="10,5,10,5"
						VerticalAlignment="Bottom"
						Background="#FFD6D6D6"
						DockPanel.Dock="Bottom">
								<Grid>
									<Grid.Styles>
										<Style Selector="Button">
											<Setter Property="MinWidth" Value="250" />
											<Setter Property="HorizontalContentAlignment" Value="Center" />
										</Style>
									</Grid.Styles>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="2*" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="2*" />
									</Grid.ColumnDefinitions>
									<Button
										Command="{Binding OnPrevSlideClickCommand}"
										HorizontalAlignment="Left"
										HorizontalContentAlignment="Stretch"
										FontSize="16"
										IsCancel="True"
										IsTabStop="False">
										<Grid>
											<material:MaterialIcon
												Margin="10 0"
												Foreground="#383838"
												HorizontalAlignment="Left"
												Kind="ArrowLeft" />
											<TextBlock Text="Previous"
													   TextAlignment="Center" />
										</Grid>
									</Button>
									<!--<Button
										Grid.Column="1"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Click="OnScrollToItemClick"
										Content="Scroll"
										Foreground="{DynamicResource ForegroundText}">
									</Button>-->
									<Button
										Command="{Binding OnNextSlideClickCommand}"
										HorizontalAlignment="Right"
										HorizontalContentAlignment="Stretch"
										Grid.Column="2"
										FontSize="16"
										IsCancel="True"
										IsTabStop="False">
										<Grid>
											<material:MaterialIcon
												Margin="10 0"
												Foreground="#383838"
												HorizontalAlignment="Right"
												Kind="ArrowRight" />
											<TextBlock Text="Next"
													   TextAlignment="Center" />
										</Grid>
									</Button>
								</Grid>
							</Border>


							<controls:PlaylistSlidesView DataContext="{Binding Playlist}" />
							<!--<controls:ItemStateView DataContext="{Binding Playlist.State.SelectedItem}" />-->

						</DockPanel>
					</Border>
				</Grid>

			</DockPanel>

			<GridSplitter Grid.Column="1"
					Margin="-3,0"
					BorderThickness="3,0"
					BorderBrush="Transparent"
					HorizontalAlignment="Stretch"
					Background="#9a93cd"
					ZIndex="9999"
			  />

			<!-- Right panel -->
			<DockPanel Grid.Column="2" Background="#eeeef2">


				<Border Padding="10" DockPanel.Dock="Top" Height="70">
					<DockPanel>
						<Button VerticalAlignment="Center" HorizontalContentAlignment="Left" DockPanel.Dock="Left" FontSize="18" Background="Transparent" 
								BorderThickness="0">
							<DockPanel>
								<material:MaterialIcon DockPanel.Dock="Right" 
													   VerticalAlignment="Bottom" 
													   Height="22" Width="26" 
													   Foreground="Black" 
													   Kind="ChevronRight" 
													   Margin="0" Padding="0" />
								<TextBlock Text="Live" VerticalAlignment="Bottom" />
							</DockPanel>
							<Button.Flyout>
								<Flyout Placement="BottomEdgeAlignedLeft">
									<Grid MinWidth="200">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="*"/>
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<CheckBox Grid.Row="0" Grid.Column="0" IsChecked="{Binding ProjectorWindow.IsVisible, FallbackValue=False}"
												IsHitTestVisible="False"
												Focusable="False"/>

										<Button Grid.Row="0" Grid.Column="1" Command="{Binding OnProjectorClickCommand}">Projector</Button>
										<CheckBox Grid.Row="1" Grid.Column="0" IsChecked="{Binding StageDisplayWindow.IsVisible, FallbackValue=False}"
												IsHitTestVisible="False"
												Focusable="False"/>
										<Button Grid.Row="1" Grid.Column="1" Command="{Binding OnStageDisplayClickCommand}">Stage Display</Button>
									</Grid>
								</Flyout>
							</Button.Flyout>
						</Button>
						<Grid></Grid>
					</DockPanel>
				</Border>


				<Grid DockPanel.Dock="Top">
					<Grid.Background>
						<VisualBrush DestinationRect="0,0,128,128" TileMode="Tile">
							<VisualBrush.Visual>
								<Canvas Width="16" Height="16" Background="#1a1a1a">
									<Rectangle Height="8" Width="8" Fill="#1c1c1c" />
									<Rectangle Height="8" Width="8" Canvas.Left="8" Canvas.Top="8" Fill="#1c1c1c" />
								</Canvas>
							</VisualBrush.Visual>
						</VisualBrush>
					</Grid.Background>
					<Border>
						<Viewbox>

							<viewsrender:SlideRenderer ActiveSlide="{Binding ActiveSlide}" IsLive="False" PageTransition="{Binding ActiveItemPageTransition}" />

							<!--<views:ActiveSlideOutput Width="1920" Height="1080" />-->
							<!--<views:LowerThirdSlideTemplate Name="LivePreview" Width="1920" Height="1080" />-->
							<!--<viewsrender:SlideRenderer DataContext="{Binding SlidesSelectedItem}" Width="1920" Height="1080" IsLive="False" />-->
						</Viewbox>
					</Border>
				</Grid>


				<UniformGrid DockPanel.Dock="Top" Columns="3" Rows="1" Height="35">
					<UniformGrid.Styles>
						<Style Selector="RadioButton">
							<Setter Property="HorizontalContentAlignment" Value="Center" />
							<Setter Property="HorizontalAlignment" Value="Stretch" />
							<Setter Property="VerticalAlignment" Value="Stretch" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate>
										<ToggleButton
											Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
											IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"
											HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
											VerticalAlignment="{TemplateBinding VerticalAlignment}"
													  />
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</UniformGrid.Styles>
					<RadioButton IsChecked="{Binding Playlist.State.IsLogo}">Logo</RadioButton>
					<RadioButton IsChecked="{Binding Playlist.State.IsBlank}">Blank</RadioButton>
					<RadioButton IsChecked="{Binding Playlist.State.IsFreeze}">Freeze</RadioButton>
				</UniformGrid>

				<TextBlock Padding="5 5 5 10" FontSize="25" DockPanel.Dock="Bottom" HorizontalAlignment="Center" Text="{Binding CurrentTime, StringFormat='{}{0:hh:mm tt}'}"/>

				<!-- controlmodules -->
				<!--<controlmodules:AutoAdvanceControlView DockPanel.Dock="Bottom" />-->
				<controlmodules:VideoSlideControlViewWrapper DockPanel.Dock="Bottom" DataContext="{Binding ActiveSlide}" />
				<!--<controlmodules:AudioRecorderControlView DockPanel.Dock="Bottom" />-->
				<!--<Background="#F7F0D7" BorderBrush="#CEB561" BorderThickness="0 1 0 1">
					<DockPanel Margin="10 8">
						<material:MaterialIcon DockPanel.Dock="Right" Kind="Record" Foreground="#c43e1c" />
						<StackPanel>
							<TextBlock Text="Audio Recording" FontWeight="Medium" />
							<TextBlock Text="00:00:00" FontSize="18" />
						</StackPanel>
					</DockPanel>
				</Border>-->

				<Grid></Grid>

			</DockPanel>
		</Grid>
	</DockPanel>

</Window>

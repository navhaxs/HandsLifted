<UserControl
    x:Class="HandsLiftedApp.Controls.ItemOrderListView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avaloniaconverters="using:Avalonia.Markup.Xaml.Converters"
    xmlns:b="using:HandsLiftedApp.Behaviours"
    xmlns:behaviours="using:HandsLiftedApp.Behaviours"
    xmlns:converters="using:HandsLiftedApp.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
    xmlns:iac="clr-namespace:Avalonia.Xaml.Interactions.Custom;assembly=Avalonia.Xaml.Interactions"
    xmlns:idd="clr-namespace:Avalonia.Xaml.Interactions.DragAndDrop;assembly=Avalonia.Xaml.Interactions"
    xmlns:material="using:Material.Icons.Avalonia"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:utils="using:HandsLiftedApp.Utils"
    xmlns:items="clr-namespace:HandsLiftedApp.Controls.Items"
    xmlns:mockData="clr-namespace:HandsLiftedApp.Controls.MockData"
    xmlns:common="clr-namespace:HandsLiftedApp.Common;assembly=HandsLiftedApp.Common"
    d:DesignHeight="400"
    d:DesignWidth="200"
    mc:Ignorable="d"
    x:CompileBindings="False">

    <Design.DataContext>
        <mockData:MockMainWindowViewModel />
    </Design.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <converters:ColorToBrush
                x:Key="ColorToLightLuminanceBrush"
                A="0.2"
                L="0.4"
                S="0.4" />
            <converters:ColorToBrush
                x:Key="ColorToDarkLuminanceBrush"
                L="0.6"
                S="0.7" />
            <converters:ColorToConstrastingBrush x:Key="ColorToConstrastingBrush" />
            <converters:ColorToLightLuminance x:Key="ColorToLightLuminance" />
            <converters:ColorToLightLuminance
                x:Key="ColorToBrightLuminance"
                L="0.4"
                S="0.8" />
            <converters:ChainedConverter
                x:Key="ChainedConverter"
                Converter1="{StaticResource ColorToLightLuminance}"
                Converter2="{StaticResource ColorToBrushConverter}" />
            <converters:ChainedConverter
                x:Key="ChainedBrightConverter"
                Converter1="{StaticResource ColorToBrightLuminance}"
                Converter2="{StaticResource ColorToBrushConverter}" />
            <converters:StringToUppercaseConverter x:Key="StringToUppercaseConverter" />
            <converters:ItemToIndexConverter x:Key="itemToIndexConverter" />
            <converters:IntMinusOneConverter x:Key="intMinusOneConverter" />
            <avaloniaconverters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <converters:IsGreaterThanConverter x:Key="IsGreaterThanConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceInclude Source="avares://HandsLiftedApp.Controls/Assets/AddItemFlyoutResourceDictionary.axaml" />
            </ResourceDictionary.MergedDictionaries>

            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <SolidColorBrush x:Key="GroupHeadingBackground">#d5cfe8</SolidColorBrush>
                    <SolidColorBrush x:Key="GroupHeadingForeground">#383838</SolidColorBrush>
                    <SolidColorBrush x:Key="ActiveItemForeground">#4d347f</SolidColorBrush>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <SolidColorBrush x:Key="GroupHeadingBackground">#1e1e1e</SolidColorBrush>
                    <SolidColorBrush x:Key="GroupHeadingForeground">#DBDBDB</SolidColorBrush>
                    <SolidColorBrush x:Key="ActiveItemForeground">White</SolidColorBrush>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.Styles>
        <Style Selector="ListBox">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
        </Style>

        <Style Selector="ListBoxItem">
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem
                            Click="MoveUpItem_OnClick"
                            CommandParameter="{Binding}"
                            Header="Move Up">
                            <MenuItem.Icon>
                                <material:MaterialIcon Kind="ArrowUp" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Click="MoveDownItem_OnClick"
                            CommandParameter="{Binding}"
                            Header="Move Down">
                            <MenuItem.Icon>
                                <material:MaterialIcon Kind="ArrowDown" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Click="DeleteItem_OnClick"
                            CommandParameter="{Binding}"
                            Header="Remove Item">
                            <MenuItem.Icon>
                                <material:MaterialIcon Kind="Times" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="0" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="BorderThickness" Value="0 0 0 1" />
            <Setter Property="CornerRadius" Value="0 0 0 0" />
            <!--<Setter Property="(i:Interaction.Behaviors)">
                <i:BehaviorCollectionTemplate>
                    <i:BehaviorCollection>
                        <behaviours:DragControlBehavior />
                    </i:BehaviorCollection>
                </i:BehaviorCollectionTemplate>
            </Setter>-->
        </Style>

        <Style Selector="ListBoxItem:selected /template/ ContentPresenter">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="{DynamicResource ActiveItemForeground}" />
            <!--<Setter Property="BorderBrush" Value="#6259A5" />-->
        </Style>
        
        <Style Selector="TextBlock.isSelectedItem">
            <Setter Property="Foreground" Value="#FF3400" />
        </Style>

        <Style Selector="TextBlock.isSelectedItem">
            <Setter Property="Foreground" Value="#FF3400" />
        </Style>

        <Style Selector="ListBoxItem TextBlock.SectionHeadingTextBlock">
            <Setter Property="Foreground" Value="{DynamicResource GroupHeadingForeground}" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <Style Selector="ListBoxItem:selected TextBlock.SectionHeadingTextBlock">
            <Setter Property="Foreground" Value="White" />
        </Style>

        <Style Selector="ListBoxItem material|MaterialIcon">
            <Setter Property="Foreground" Value="#888888" />
        </Style>
        <Style Selector="ListBoxItem:selected material|MaterialIcon">
            <Setter Property="Foreground" Value="{DynamicResource ActiveItemForeground}" />
        </Style>

        <Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="#C11F576F" />
            <!--<Setter Property="BorderBrush" Value="#1f576f" />-->
        </Style>

        <Style Selector="ListBoxItem Border.SectionHeadingBorder">
            <Setter Property="Background" Value="{DynamicResource GroupHeadingBackground}" />
            <Setter Property="BorderBrush"
                    Value="{Binding ItemGroupAvaloniaColor, Converter={StaticResource ColorToDarkLuminanceBrush}, FallbackValue='#9a93cd'}" />
        </Style>
        <!--<Style Selector="ListBoxItem:pointerover Border.SectionHeadingBorder">
            <Setter Property="Background" Value="#C11F576F" />
        </Style>-->

        <Style Selector="ListBoxItem:selected:pointerover /template/ ContentPresenter">
            <!--<Setter Property="BorderBrush" Value="#6259A5" />-->
        </Style>

        <Style Selector="ListBoxItem:pressed /template/ ContentPresenter">
            <!--<Setter Property="Background" Value="#6259A5"/>-->
        </Style>

    </UserControl.Styles>

    <Grid>
        <ScrollViewer>
            <!-- SelectedIndex="{Binding SelectedItemIndex}" -->
            <ListBox
                x:Name="itemsListBox"
                Margin="0,0,0,100"
                Background="Transparent"
                Classes="ItemsDragAndDrop"
                CornerRadius="0,0,0,6"
                DragDrop.AllowDrop="True"
                ItemsSource="{Binding Items, Mode=OneWay}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <!--  disable virtualization  -->
                        <StackPanel />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <!-- 
                TODO how to register custom 'classes' on the list *item* object?
                -->
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Add Item" />
                    </ContextMenu>
                </ListBox.ContextMenu>
                <ListBox.ItemTemplate>
                    <common:MyTemplateSelector>
                        <DataTemplate x:Key="SectionHeadingItem">
                            <!--  TODO not working  -->
                            <!--<Grid.Styles>
									<Style Selector="Border:pointerover">
										<Setter Property="Background" Value="#214c5e" />
									</Style>
								</Grid.Styles>-->
                            <Border BorderThickness="0 0 0 0"
                                    Classes="SectionHeadingBorder">
                                <DockPanel Margin="8,0,0,0" VerticalAlignment="Stretch">
                                    <TextBlock
                                        Padding="0,8"
                                        Classes="SectionHeadingTextBlock"
                                        FontSize="13"
                                        TextTrimming="CharacterEllipsis">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0}">
                                                <Binding Path="Title" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DockPanel>
                                <i:Interaction.Behaviors>
                                    <behaviours:DragControlBehavior />
                                </i:Interaction.Behaviors>
                            </Border>
                        </DataTemplate>
                        <DataTemplate x:Key="CommentItem">
                            <DockPanel
                                Margin="0,0,0,0"
                                Background="Transparent"
                                VerticalAlignment="Stretch">
                                <items:ItemIcon Margin="0,0,12,0" DockPanel.Dock="Left" />
                                <TextBlock
                                    Padding="0,8,0,8"
                                    FontSize="13"
                                    TextTrimming="CharacterEllipsis">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}">
                                            <Binding Path="Title" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <i:Interaction.Behaviors>
                                    <behaviours:DragControlBehavior />
                                </i:Interaction.Behaviors>
                            </DockPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="Fallback">
                            <DockPanel
                                Margin="0,0,0,0"
                                Background="Transparent"
                                VerticalAlignment="Stretch">
                                <Grid Width="16">
                                    <Viewbox
                                        Width="22"
                                        Height="22"
                                        Margin="-8,0,8,0"
                                        IsVisible="{Binding SelectedSlideIndex, FallbackValue=-1, Converter={StaticResource IsGreaterThanConverter}}">
                                        <Polygon Fill="#FF3400" Points="0,0 8,5, 0,10" />
                                    </Viewbox>
                                </Grid>
                                <items:ItemIcon Margin="0,0,12,0" DockPanel.Dock="Left" />
                                <TextBlock
                                    Padding="0,8,0,8"
                                    FontSize="13"
                                    Classes.isSelectedItem="{Binding SelectedSlideIndex, FallbackValue=-1, Converter={StaticResource IsGreaterThanConverter}}"
                                    TextTrimming="CharacterEllipsis">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}">
                                            <Binding Path="Title" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <i:Interaction.Behaviors>
                                    <behaviours:DragControlBehavior />
                                </i:Interaction.Behaviors>
                            </DockPanel>
                        </DataTemplate>
                    </common:MyTemplateSelector>
                </ListBox.ItemTemplate>
            </ListBox>
        </ScrollViewer>
        <Button
            Name="AddItemButton"
            Margin="6,0,6,8"
            Padding="12"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            HorizontalContentAlignment="Left"
            Background="#4d347f"
            BorderThickness="0"
            ClickMode="Press"
            CornerRadius="6"
            Cursor="Hand"
            DataContext="{Binding Playlist.Items.Count, Converter={StaticResource intMinusOneConverter}}"
            DockPanel.Dock="Bottom"
            Flyout="{StaticResource addItemFlyout}"
            FontSize="14"
            Foreground="White">
            <Button.Styles>
                <Style Selector="ScrollViewer">
                    <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
                </Style>
                <Style Selector="MenuItem">
                    <Setter Property="FontSize" Value="14" />
                    <Setter Property="Padding" Value="8 6" />
                </Style>
                <Style Selector="Button:pointerover /template/ ContentPresenter">
                    <Setter Property="Background" Value="#5C3AB6" />
                </Style>
                <Style Selector="Button:pressed /template/ ContentPresenter">
                    <Setter Property="BorderBrush" Value="#2c628b" />
                    <Setter Property="Background" Value="#5F5C2ED6" />
                </Style>
            </Button.Styles>
            <Button.Effect>
                <DropShadowEffect
                    BlurRadius="6"
                    OffsetX="0"
                    OffsetY="1"
                    Color="#55000000" />
            </Button.Effect>

            <DockPanel>
                <material:MaterialIcon
                    Width="20"
                    Height="20"
                    DockPanel.Dock="Left"
                    Kind="Plus" />
                <TextBlock
                    Margin="8,0,8,0"
                    IsVisible="True"
                    Text="Add Item" />
            </DockPanel>
        </Button>

    </Grid>
</UserControl>